/**
 * Copyright (c) 2013 by Gerrit Grunwald
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package eu.hansolo.enzo.radialmenu;

import eu.hansolo.enzo.radialmenu.SymbolType;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.paint.Color;

/**
 * Created with IntelliJ IDEA.
 * User: hansolo
 * Date: 25.09.12
 * Time: 09:00
 * To change this template use File | Settings | File Templates.
 */
@SuppressWarnings("all")
public class SymbolCanvas {
  public static final Canvas getSymbol(final SymbolType TYPE, final double SIZE, final Color COLOR) {
    final Canvas CANVAS = new Canvas(SIZE, SIZE);
    final GraphicsContext CTX = CANVAS.getGraphicsContext2D();
    CTX.setFill(COLOR);
    if (TYPE != null) {
      switch (TYPE) {
        case REFRESH:
          SymbolCanvas.drawRefreshCanvas(CTX, SIZE, SIZE);
          break;
        case STAR:
          SymbolCanvas.drawStarCanvas(CTX, SIZE, SIZE);
          break;
        case HEART:
          SymbolCanvas.drawHeartCanvas(CTX, SIZE, SIZE);
          break;
        case BLUE_TOOTH:
          SymbolCanvas.drawBlueToothCanvas(CTX, SIZE, SIZE);
          break;
        case SEARCH:
          SymbolCanvas.drawSearchCanvas(CTX, SIZE, SIZE);
          break;
        case ZOOM_IN:
          SymbolCanvas.drawZoomInCanvas(CTX, SIZE, SIZE);
          break;
        case ZOOM_OUT:
          SymbolCanvas.drawZoomOutCanvas(CTX, SIZE, SIZE);
          break;
        case EYE:
          SymbolCanvas.drawEyeCanvas(CTX, SIZE, SIZE);
          break;
        case COMPOSE:
          SymbolCanvas.drawComposeCanvas(CTX, SIZE, SIZE);
          break;
        case ROCKET:
          SymbolCanvas.drawRocketCanvas(CTX, SIZE, SIZE);
          break;
        case CART:
          SymbolCanvas.drawCartCanvas(CTX, SIZE, SIZE);
          break;
        case TAG:
          SymbolCanvas.drawTagCanvas(CTX, SIZE, SIZE);
          break;
        case REPEAT:
          SymbolCanvas.drawRepeatCanvas(CTX, SIZE, SIZE);
          break;
        case SHUFFLE:
          SymbolCanvas.drawShuffleCanvas(CTX, SIZE, SIZE);
          break;
        case UNDO:
          SymbolCanvas.drawUndoCanvas(CTX, SIZE, SIZE);
          break;
        case SETTINGS:
          SymbolCanvas.drawSettingsCanvas(CTX, SIZE, SIZE);
          break;
        case TOOL:
          SymbolCanvas.drawToolCanvas(CTX, SIZE, SIZE);
          break;
        case CALENDAR:
          SymbolCanvas.drawCalendarCanvas(CTX, SIZE, SIZE);
          break;
        case CLOCK:
          SymbolCanvas.drawClockCanvas(CTX, SIZE, SIZE);
          break;
        case ALARM:
          SymbolCanvas.drawAlarmCanvas(CTX, SIZE, SIZE);
          break;
        case SPEECH_BUBBLE:
          SymbolCanvas.drawSpeechBubbleCanvas(CTX, SIZE, SIZE);
          break;
        case WEB:
          SymbolCanvas.drawWebCanvas(CTX, SIZE, SIZE);
          break;
        case MAIL:
          SymbolCanvas.drawMailCanvas(CTX, SIZE, SIZE);
          break;
        case PHONE:
          SymbolCanvas.drawPhoneCanvas(CTX, SIZE, SIZE);
          break;
        case USER:
          SymbolCanvas.drawUserCanvas(CTX, SIZE, SIZE);
          break;
        case ATTACHMENT:
          SymbolCanvas.drawAttachmentCanvas(CTX, SIZE, SIZE);
          break;
        case LINK:
          SymbolCanvas.drawLinkCanvas(CTX, SIZE, SIZE);
          break;
        case CLOUD:
          SymbolCanvas.drawCloudCanvas(CTX, SIZE, SIZE);
          break;
        case GRAPH:
          SymbolCanvas.drawGraphCanvas(CTX, SIZE, SIZE);
          break;
        case TRASH:
          SymbolCanvas.drawTrashCanvas(CTX, SIZE, SIZE);
          break;
        case HEAD_PHONES:
          SymbolCanvas.drawHeadPhonesCanvas(CTX, SIZE, SIZE);
          break;
        case MUSIC:
          SymbolCanvas.drawMusicCanvas(CTX, SIZE, SIZE);
          break;
        case VOLUME:
          SymbolCanvas.drawVolumeCanvas(CTX, SIZE, SIZE);
          break;
        case CAMERA:
          SymbolCanvas.drawCameraCanvas(CTX, SIZE, SIZE);
          break;
        case PHOTO:
          SymbolCanvas.drawPhotoCanvas(CTX, SIZE, SIZE);
          break;
        case BACK:
          SymbolCanvas.drawBackCanvas(CTX, SIZE, SIZE);
          break;
        case REWIND:
          SymbolCanvas.drawRewindCanvas(CTX, SIZE, SIZE);
          break;
        case PAUSE:
          SymbolCanvas.drawPauseCanvas(CTX, SIZE, SIZE);
          break;
        case PLAY:
          SymbolCanvas.drawPlayCanvas(CTX, SIZE, SIZE);
          break;
        case FORWARD:
          SymbolCanvas.drawForwardCanvas(CTX, SIZE, SIZE);
          break;
        case NEXT:
          SymbolCanvas.drawNextCanvas(CTX, SIZE, SIZE);
          break;
        case EJECT:
          SymbolCanvas.drawEjectCanvas(CTX, SIZE, SIZE);
          break;
        case COMPASS:
          SymbolCanvas.drawCompassCanvas(CTX, SIZE, SIZE);
          break;
        case GLOBE:
          SymbolCanvas.drawGlobeCanvas(CTX, SIZE, SIZE);
          break;
        case LOCATION:
          SymbolCanvas.drawLocationCanvas(CTX, SIZE, SIZE);
          break;
        case TWITTER:
          SymbolCanvas.drawTwitterCanvas(CTX, SIZE, SIZE);
          break;
        case FACEBOOK:
          SymbolCanvas.drawFacebookCanvas(CTX, SIZE, SIZE);
          break;
        case GOOGLE:
          SymbolCanvas.drawGoogleCanvas(CTX, SIZE, SIZE);
          break;
        case LOCK:
          SymbolCanvas.drawLockCanvas(CTX, SIZE, SIZE);
          break;
        case CURSOR:
          SymbolCanvas.drawCursorCanvas(CTX, SIZE, SIZE);
          break;
        case CURSOR1:
          SymbolCanvas.drawCursor1Canvas(CTX, SIZE, SIZE);
          break;
        case CURSOR2:
          SymbolCanvas.drawCursor2Canvas(CTX, SIZE, SIZE);
          break;
        case CROP:
          SymbolCanvas.drawCropCanvas(CTX, SIZE, SIZE);
          break;
        case SELECTION:
          SymbolCanvas.drawSelectionCanvas(CTX, SIZE, SIZE);
          break;
        case SELECTION1:
          SymbolCanvas.drawSelection1Canvas(CTX, SIZE, SIZE);
          break;
        case SELECTION2:
          SymbolCanvas.drawSelection2Canvas(CTX, SIZE, SIZE);
          break;
        case SELECTION3:
          SymbolCanvas.drawSelection3Canvas(CTX, SIZE, SIZE);
          break;
        case PENCIL:
          SymbolCanvas.drawPencilCanvas(CTX, SIZE, SIZE);
          break;
        case BRUSH:
          SymbolCanvas.drawBrushCanvas(CTX, SIZE, SIZE);
          break;
        case BIG_BRUSH:
          SymbolCanvas.drawBigBrushCanvas(CTX, SIZE, SIZE);
          break;
        case PEN:
          SymbolCanvas.drawPenCanvas(CTX, SIZE, SIZE);
          break;
        case PEN1:
          SymbolCanvas.drawPen1Canvas(CTX, SIZE, SIZE);
          break;
        case LINE:
          SymbolCanvas.drawLineCanvas(CTX, SIZE, SIZE);
          break;
        case EYEDROPPER:
          SymbolCanvas.drawEyeDropperCanvas(CTX, SIZE, SIZE);
          break;
        case ERASER:
          SymbolCanvas.drawEraserCanvas(CTX, SIZE, SIZE);
          break;
        case SCISSORS:
          SymbolCanvas.drawScissorsCanvas(CTX, SIZE, SIZE);
          break;
        case SMUDGE:
          SymbolCanvas.drawSmudgeCanvas(CTX, SIZE, SIZE);
          break;
        case CONTRAST:
          SymbolCanvas.drawContrastCanvas(CTX, SIZE, SIZE);
          break;
        case LAYERS:
          SymbolCanvas.drawLayersCanvas(CTX, SIZE, SIZE);
          break;
        case BOOLEAN:
          SymbolCanvas.drawBooleanCanvas(CTX, SIZE, SIZE);
          break;
        case TEXT:
          SymbolCanvas.drawTextCanvas(CTX, SIZE, SIZE);
          break;
        case ALIGN_LEFT:
          SymbolCanvas.drawAlignLeftCanvas(CTX, SIZE, SIZE);
          break;
        case CENTER:
          SymbolCanvas.drawCenterCanvas(CTX, SIZE, SIZE);
          break;
        case ALIGN_RIGHT:
          SymbolCanvas.drawAlignRightCanvas(CTX, SIZE, SIZE);
          break;
        case JUSTIFIED:
          SymbolCanvas.drawJustifiedCanvas(CTX, SIZE, SIZE);
          break;
        case BULB:
          SymbolCanvas.drawBulbCanvas(CTX, SIZE, SIZE);
          break;
        case BULB_ON:
          SymbolCanvas.drawBulbOnCanvas(CTX, SIZE, SIZE);
          break;
        case GAUGE:
          SymbolCanvas.drawGaugeCanvas(CTX, SIZE, SIZE);
          break;
        case UNLOCK:
          SymbolCanvas.drawUnlockCanvas(CTX, SIZE, SIZE);
          break;
        case TAGS:
          SymbolCanvas.drawTagsCanvas(CTX, SIZE, SIZE);
          break;
        case MONITOR:
          SymbolCanvas.drawMonitorCanvas(CTX, SIZE, SIZE);
          break;
        case PLANE:
          SymbolCanvas.drawPlaneCanvas(CTX, SIZE, SIZE);
          break;
        case TRAIN:
          SymbolCanvas.drawTrainCanvas(CTX, SIZE, SIZE);
          break;
        case CAR:
          SymbolCanvas.drawCarCanvas(CTX, SIZE, SIZE);
          break;
        case LUGGAGE:
          SymbolCanvas.drawLuggageCanvas(CTX, SIZE, SIZE);
          break;
        case BRIGHTNESS:
          SymbolCanvas.drawBrightnessCanvas(CTX, SIZE, SIZE);
          break;
        case DELETE:
          SymbolCanvas.drawDeleteCanvas(CTX, SIZE, SIZE);
          break;
        case SAVE:
          SymbolCanvas.drawSaveCanvas(CTX, SIZE, SIZE);
          break;
        case LOAD:
          SymbolCanvas.drawLoadCanvas(CTX, SIZE, SIZE);
          break;
        default:
          break;
      }
    } else {
    }
    CANVAS.setCache(true);
    return CANVAS;
  }
  
  public static final void drawRefreshCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.21428571428571427 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.2857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.10714285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.10714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.10714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.42857142857142855 * HEIGHT), (0.21428571428571427 * WIDTH), (0.39285714285714285 * HEIGHT), (0.21428571428571427 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.75 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.7857142857142857 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawStarCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5357142857142857 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.9285714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.9285714285714286 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.75 * WIDTH), (0.8571428571428571 * HEIGHT), (0.75 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.75 * WIDTH), (0.8928571428571429 * HEIGHT), (0.75 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5357142857142857 * WIDTH), (0.75 * HEIGHT), (0.5357142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.75 * HEIGHT), (0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.4642857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.8928571428571429 * HEIGHT), (0.25 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8928571428571429 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8928571428571429 * HEIGHT), (0.25 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.07142857142857142 * WIDTH), (0.39285714285714285 * HEIGHT), (0.07142857142857142 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.35714285714285715 * HEIGHT), (0.07142857142857142 * WIDTH), (0.35714285714285715 * HEIGHT), (0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT), (0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT), (0.39285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawHeartCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.10714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT), (0.03571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.03571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.8928571428571429 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.9285714285714286 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8214285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawBlueToothCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSearchCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6428571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.10714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6071428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.5357142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5 * HEIGHT), (0.7142857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT), (0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawZoomInCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6428571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.10714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6071428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.5357142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5 * HEIGHT), (0.7142857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT), (0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.35714285714285715 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawZoomOutCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6428571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.10714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6071428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.5357142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5 * HEIGHT), (0.7142857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT), (0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawEyeCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.21428571428571427 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.5 * HEIGHT), (0.25 * WIDTH), (0.7857142857142857 * HEIGHT), (0.5 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.7857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.5 * HEIGHT), (0.75 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.4642857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.5357142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5357142857142857 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawComposeCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.14285714285714285 * HEIGHT), (0.75 * WIDTH), (0.10714285714285714 * HEIGHT), (0.75 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT), (0.8571428571428571 * WIDTH), (0.07142857142857142 * HEIGHT), (0.8571428571428571 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.5 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.8928571428571429 * HEIGHT), (0.25 * WIDTH), (0.8928571428571429 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8571428571428571 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.8214285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.35714285714285715 * HEIGHT), (0.07142857142857142 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.14285714285714285 * HEIGHT), (0.10714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.10714285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawRocketCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.6785714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7142857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7857142857142857 * WIDTH), (0.25 * HEIGHT), (0.7857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.75 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7142857142857143 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6428571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT), (0.42857142857142855 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.39285714285714285 * HEIGHT), (0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT), (0.25 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT), (0.25 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.5 * HEIGHT), (0.8928571428571429 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCartCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.2857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.75 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.25 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT), (0.10714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT), (0.07142857142857142 * WIDTH), (0.17857142857142858 * HEIGHT), (0.07142857142857142 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.21428571428571427 * HEIGHT), (0.10714285714285714 * WIDTH), (0.25 * HEIGHT), (0.10714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.25 * HEIGHT), (0.14285714285714285 * WIDTH), (0.25 * HEIGHT), (0.14285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.25 * HEIGHT), (0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawTagCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.35714285714285715 * HEIGHT), (0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT), (0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.21428571428571427 * WIDTH), (0.21428571428571427 * HEIGHT), (0.25 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.32142857142857145 * WIDTH), (0.25 * HEIGHT), (0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.25 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawRepeatCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawShuffleCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT), (0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.2857142857142857 * HEIGHT), (0.21428571428571427 * WIDTH), (0.25 * HEIGHT), (0.14285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.25 * HEIGHT), (0.03571428571428571 * WIDTH), (0.25 * HEIGHT), (0.03571428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT), (0.21428571428571427 * WIDTH), (0.39285714285714285 * HEIGHT), (0.25 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.4642857142857143 * HEIGHT), (0.25 * WIDTH), (0.4642857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.42857142857142855 * HEIGHT), (0.2857142857142857 * WIDTH), (0.42857142857142855 * HEIGHT), (0.32142857142857145 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT), (0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5357142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.75 * HEIGHT), (0.7857142857142857 * WIDTH), (0.75 * HEIGHT), (0.7857142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo(WIDTH, (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5 * WIDTH), (0.6428571428571429 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo(WIDTH, (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.35714285714285715 * WIDTH), (0.4642857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.6071428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.6428571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.6428571428571429 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.7857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawUndoCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.21428571428571427 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.21428571428571427 * HEIGHT), (0.10714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.25 * HEIGHT), (0.42857142857142855 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.5 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSettingsCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.9642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.9642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8928571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8928571428571429 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8214285714285714 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.03571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.10714285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.14285714285714285 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.21428571428571427 * WIDTH), (0.10714285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.10714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.03571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT), (0.03571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.9642857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.5714285714285714 * HEIGHT), (0.9642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.9642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawToolCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5357142857142857 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.10714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.25 * WIDTH), (0.39285714285714285 * HEIGHT), (0.25 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.21428571428571427 * HEIGHT), (0.2857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT), (0.2857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.07142857142857142 * HEIGHT), (0.42857142857142855 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.75 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCalendarCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT), (0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.75 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.7857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT), (0.7857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.03571428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.03571428571428571 * HEIGHT), (0.75 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.03571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.03571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.10714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8928571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.10714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.03571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.03571428571428571 * WIDTH), (0.8571428571428571 * HEIGHT), (0.03571428571428571 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.9285714285714286 * HEIGHT), (0.07142857142857142 * WIDTH), (0.9642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.9642857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.9642857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.9642857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.9285714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.9285714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.9285714285714286 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.14285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7142857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7142857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6785714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6785714285714286 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.25 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.10714285714285714 * HEIGHT), (0.03571428571428571 * WIDTH), (0.14285714285714285 * HEIGHT), (0.03571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.07142857142857142 * HEIGHT), (0.17857142857142858 * WIDTH), (0.14285714285714285 * HEIGHT), (0.17857142857142858 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT), (0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.14285714285714285 * HEIGHT), (0.25 * WIDTH), (0.07142857142857142 * HEIGHT), (0.25 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.03571428571428571 * HEIGHT), (0.25 * WIDTH), (0.03571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.03571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.03571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawClockCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.25 * HEIGHT), (0.5357142857142857 * WIDTH), (0.25 * HEIGHT), (0.5357142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.5 * HEIGHT), (0.5357142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.5 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawAlarmCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7142857142857143 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.6428571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.25 * HEIGHT), (0.6071428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5357142857142857 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.07142857142857142 * HEIGHT), (0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.25 * HEIGHT), (0.21428571428571427 * WIDTH), (0.39285714285714285 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.8928571428571429 * HEIGHT), (0.42857142857142855 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSpeechBubbleCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.07142857142857142 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.21428571428571427 * WIDTH), (0.7857142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT), (0.4642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5714285714285714 * HEIGHT), (0.9285714285714286 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.75 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.14285714285714285 * HEIGHT), (0.07142857142857142 * WIDTH), (0.2857142857142857 * HEIGHT), (0.07142857142857142 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawWebCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7142857142857143 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT), (0.2857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6071428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.25 * HEIGHT), (0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.10714285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.25 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.75 * HEIGHT), (0.6071428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.5 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.32142857142857145 * HEIGHT), (0.35714285714285715 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7857142857142857 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.5714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.4642857142857143 * WIDTH), (0.35714285714285715 * HEIGHT), (0.5 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.5714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawMailCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.75 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.07142857142857142 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.2857142857142857 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.5 * HEIGHT), (0.35714285714285715 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.5 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.25 * HEIGHT), (0.9285714285714286 * WIDTH), (0.25 * HEIGHT), (0.9285714285714286 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.5 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.10714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.10714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawPhoneCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.5714285714285714 * HEIGHT), (0.75 * WIDTH), (0.5714285714285714 * HEIGHT), (0.75 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.5714285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.25 * HEIGHT), (0.42857142857142855 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.25 * WIDTH), (0.10714285714285714 * HEIGHT), (0.25 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.10714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT), (0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.25 * HEIGHT), (0.03571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.9642857142857143 * HEIGHT), (0.75 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.6071428571428571 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.42857142857142855 * HEIGHT), (0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawUserCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8928571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.21428571428571427 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.42857142857142855 * HEIGHT), (0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.32142857142857145 * HEIGHT), (0.35714285714285715 * WIDTH), (0.2857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.17857142857142858 * HEIGHT), (0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6428571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6428571428571429 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.75 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawAttachmentCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.07142857142857142 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.5714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6428571428571429 * HEIGHT), (0.07142857142857142 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8928571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.75 * WIDTH), (0.14285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.6428571428571429 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6428571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.5 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.5 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT), (0.8214285714285714 * WIDTH), (0.07142857142857142 * HEIGHT), (0.8928571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.9642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.9642857142857143 * HEIGHT), (0.17857142857142858 * WIDTH), (0.9642857142857143 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo(0.0, (0.7857142857142857 * HEIGHT), 0.0, (0.6428571428571429 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawLinkCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5 * WIDTH), (0.5357142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.5357142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.21428571428571427 * WIDTH), (0.25 * HEIGHT), (0.2857142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.25 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.25 * HEIGHT), (0.5714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT), (0.07142857142857142 * WIDTH), (0.2857142857142857 * HEIGHT), (0.07142857142857142 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.35714285714285715 * HEIGHT), (0.07142857142857142 * WIDTH), (0.42857142857142855 * HEIGHT), (0.07142857142857142 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.5 * HEIGHT), (0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT), (0.25 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6071428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.5 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.42857142857142855 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.4642857142857143 * HEIGHT), (0.4642857142857143 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.75 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5714285714285714 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.5 * HEIGHT), (0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.75 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCloudCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT), (0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.25 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT), (0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.10714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.5 * HEIGHT), (0.03571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.03571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.9642857142857143 * WIDTH), (0.75 * HEIGHT), (0.9642857142857143 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawGraphCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6785714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6785714285714286 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.14285714285714285 * HEIGHT), (0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT), (0.32142857142857145 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.21428571428571427 * HEIGHT), (0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT), (0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6785714285714286 * HEIGHT), (0.03571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.03571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.75 * HEIGHT), (0.03571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.03571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8571428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.75 * HEIGHT), (0.2857142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.17857142857142858 * WIDTH), (0.6785714285714286 * HEIGHT), (0.17857142857142858 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.75 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.6428571428571429 * WIDTH), (0.75 * HEIGHT), (0.6428571428571429 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.9642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.9642857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.9642857142857143 * WIDTH), (0.75 * HEIGHT), (0.9642857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawTrashCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.17857142857142858 * WIDTH), (0.75 * HEIGHT), (0.17857142857142858 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.7857142857142857 * HEIGHT), (0.75 * WIDTH), (0.7857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.7857142857142857 * HEIGHT), (0.25 * WIDTH), (0.7857142857142857 * HEIGHT), (0.25 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.25 * HEIGHT), (0.25 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawHeadPhonesCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8928571428571429 * HEIGHT), (0.75 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.75 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8928571428571429 * HEIGHT), (0.25 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.25 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5714285714285714 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.32142857142857145 * HEIGHT), (0.75 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.32142857142857145 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.5714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.6785714285714286 * HEIGHT), (0.07142857142857142 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6785714285714286 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawMusicCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.25 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.25 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8571428571428571 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.75 * WIDTH), (0.6071428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawVolumeCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.75 * WIDTH), (0.14285714285714285 * HEIGHT), (0.75 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6071428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.75 * HEIGHT), (0.6428571428571429 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.75 * WIDTH), (0.6071428571428571 * HEIGHT), (0.75 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.5357142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5357142857142857 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.07142857142857142 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6428571428571429 * HEIGHT), (0.07142857142857142 * WIDTH), (0.6428571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.35714285714285715 * HEIGHT), (0.07142857142857142 * WIDTH), (0.35714285714285715 * HEIGHT), (0.07142857142857142 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.39285714285714285 * HEIGHT), (0.07142857142857142 * WIDTH), (0.6071428571428571 * HEIGHT), (0.07142857142857142 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.25 * HEIGHT), (0.39285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.35714285714285715 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.21428571428571427 * HEIGHT), (0.21428571428571427 * WIDTH), (0.32142857142857145 * HEIGHT), (0.21428571428571427 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCameraCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.35714285714285715 * HEIGHT), (0.75 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.03571428571428571 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.03571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.03571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8571428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.9642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.9642857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.9642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.9642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.9285714285714286 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.75 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6785714285714286 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.10714285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.10714285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.10714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.17857142857142858 * HEIGHT), (0.03571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.03571428571428571 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.35714285714285715 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.5714285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.5 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.42857142857142855 * HEIGHT), (0.35714285714285715 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawPhotoCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.07142857142857142 * WIDTH), (0.21428571428571427 * HEIGHT), (0.07142857142857142 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.2857142857142857 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.7857142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.7142857142857143 * HEIGHT), (0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.42857142857142855 * HEIGHT), (0.2857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.4642857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.39285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.32142857142857145 * HEIGHT), (0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.25 * WIDTH), (0.35714285714285715 * HEIGHT), (0.25 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.5 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawBackCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.7142857142857143 * HEIGHT), (0.75 * WIDTH), (0.2857142857142857 * HEIGHT), (0.75 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.25 * HEIGHT), (0.7142857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT), (0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.25 * HEIGHT), (0.39285714285714285 * WIDTH), (0.25 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.25 * HEIGHT), (0.2857142857142857 * WIDTH), (0.25 * HEIGHT), (0.2857142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.25 * HEIGHT), (0.25 * WIDTH), (0.25 * HEIGHT), (0.25 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.2857142857142857 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawRewindCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.75 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.5 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.4642857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.8214285714285714 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.7857142857142857 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawPauseCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.25 * HEIGHT), (0.6785714285714286 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.25 * HEIGHT), (0.5714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.75 * HEIGHT), (0.6428571428571429 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.32142857142857145 * HEIGHT), (0.42857142857142855 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.25 * HEIGHT), (0.39285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.25 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.25 * HEIGHT), (0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT), (0.35714285714285715 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.75 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawPlayCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.25 * HEIGHT), (0.2857142857142857 * WIDTH), (0.25 * HEIGHT), (0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.75 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT), (0.35714285714285715 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5357142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.5 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5 * HEIGHT), (0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawForwardCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.25 * WIDTH), (0.25 * HEIGHT), (0.25 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.25 * HEIGHT), (0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.75 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.75 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.4642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT), (0.4642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.75 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.5 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawNextCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT), (0.6785714285714286 * WIDTH), (0.25 * HEIGHT), (0.6785714285714286 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.32142857142857145 * WIDTH), (0.25 * HEIGHT), (0.32142857142857145 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.25 * HEIGHT), (0.25 * WIDTH), (0.25 * HEIGHT), (0.25 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.2857142857142857 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.75 * HEIGHT), (0.2857142857142857 * WIDTH), (0.75 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.75 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.7142857142857143 * HEIGHT), (0.75 * WIDTH), (0.2857142857142857 * HEIGHT), (0.75 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.25 * HEIGHT), (0.7142857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawEjectCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.6785714285714286 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCompassCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7142857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.9285714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7857142857142857 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.7142857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.42857142857142855 * HEIGHT), (0.35714285714285715 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawGlobeCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.75 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8214285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8214285714285714 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8214285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.75 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.75 * WIDTH), (0.39285714285714285 * HEIGHT), (0.75 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.35714285714285715 * HEIGHT), (0.75 * WIDTH), (0.32142857142857145 * HEIGHT), (0.75 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.35714285714285715 * HEIGHT), (0.75 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7142857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6785714285714286 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5 * HEIGHT), (0.6428571428571429 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6428571428571429 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6071428571428571 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.6071428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.25 * HEIGHT), (0.6071428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6071428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6071428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6071428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.17857142857142858 * HEIGHT), (0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.35714285714285715 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.32142857142857145 * WIDTH), (0.25 * HEIGHT), (0.35714285714285715 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.2857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.2857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.35714285714285715 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT), (0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.32142857142857145 * HEIGHT), (0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.42857142857142855 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5 * HEIGHT), (0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.4642857142857143 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5357142857142857 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.8214285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.4642857142857143 * HEIGHT), (0.17857142857142858 * WIDTH), (0.42857142857142855 * HEIGHT), (0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.25 * HEIGHT), (0.35714285714285715 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.17857142857142858 * HEIGHT), (0.35714285714285715 * WIDTH), (0.17857142857142858 * HEIGHT), (0.35714285714285715 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT), (0.5357142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.35714285714285715 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.35714285714285715 * HEIGHT), (0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.35714285714285715 * HEIGHT), (0.42857142857142855 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.42857142857142855 * WIDTH), (0.32142857142857145 * HEIGHT), (0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.4642857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawLocationCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.07142857142857142 * HEIGHT), (0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT), (0.21428571428571427 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.9285714285714286 * HEIGHT), (0.75 * WIDTH), (0.5 * HEIGHT), (0.75 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.5 * HEIGHT), (0.32142857142857145 * WIDTH), (0.42857142857142855 * HEIGHT), (0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.25 * HEIGHT), (0.39285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT), (0.5 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawTwitterCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.25 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.7857142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8571428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.75 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6785714285714286 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.4642857142857143 * WIDTH), (0.35714285714285715 * HEIGHT), (0.4642857142857143 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT), (0.21428571428571427 * WIDTH), (0.2857142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.10714285714285714 * WIDTH), (0.25 * HEIGHT), (0.10714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.17857142857142858 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.5 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5714285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.6428571428571429 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.75 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7857142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7857142857142857 * HEIGHT), (0.07142857142857142 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.25 * WIDTH), (0.8571428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawFacebookCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.07142857142857142 * HEIGHT), (0.07142857142857142 * WIDTH), (0.10714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.14285714285714285 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8571428571428571 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.8928571428571429 * HEIGHT), (0.10714285714285714 * WIDTH), (0.9285714285714286 * HEIGHT), (0.14285714285714285 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.35714285714285715 * HEIGHT), (0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.75 * WIDTH), (0.21428571428571427 * HEIGHT), (0.75 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6428571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6428571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.9285714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.9285714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.8928571428571429 * HEIGHT), (0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.9285714285714286 * WIDTH), (0.14285714285714285 * HEIGHT), (0.9285714285714286 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.07142857142857142 * HEIGHT), (0.8571428571428571 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.07142857142857142 * HEIGHT), (0.14285714285714285 * WIDTH), (0.07142857142857142 * HEIGHT), (0.14285714285714285 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawGoogleCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.6428571428571429 * HEIGHT), (0.42857142857142855 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.moveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.42857142857142855 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5714285714285714 * WIDTH), (0.25 * HEIGHT), (0.6071428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5714285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6428571428571429 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6071428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6785714285714286 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.32142857142857145 * WIDTH), (0.21428571428571427 * HEIGHT), (0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5 * WIDTH), (0.5 * HEIGHT), (0.5 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawLockCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.5714285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6428571428571429 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT), (0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT), (0.32142857142857145 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6785714285714286 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.75 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.39285714285714285 * HEIGHT), (0.75 * WIDTH), (0.32142857142857145 * HEIGHT), (0.75 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.07142857142857142 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.32142857142857145 * HEIGHT), (0.25 * WIDTH), (0.39285714285714285 * HEIGHT), (0.25 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.5 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8928571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.9285714285714286 * HEIGHT), (0.25 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.9285714285714286 * HEIGHT), (0.75 * WIDTH), (0.9285714285714286 * HEIGHT), (0.75 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.9285714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.75 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCursorCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.25 * WIDTH), 0.0, (0.25 * WIDTH), 0.0);
    CTX.bezierCurveTo((0.25 * WIDTH), 0.0, (0.21428571428571427 * WIDTH), 0.0, (0.21428571428571427 * WIDTH), 0.0);
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), 0.0, (0.21428571428571427 * WIDTH), 0.0, (0.21428571428571427 * WIDTH), 0.0);
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), 0.0, (0.17857142857142858 * WIDTH), (0.03571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.03571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT), (0.25 * WIDTH), (0.8571428571428571 * HEIGHT), (0.25 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5714285714285714 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), HEIGHT, (0.5714285714285714 * WIDTH), HEIGHT, (0.6071428571428571 * WIDTH), HEIGHT);
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), HEIGHT, (0.6071428571428571 * WIDTH), HEIGHT, (0.6071428571428571 * WIDTH), HEIGHT);
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), HEIGHT, (0.6428571428571429 * WIDTH), (0.9642857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.9642857142857143 * HEIGHT), (0.6785714285714286 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCursor1Canvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.75 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCursor2Canvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.10714285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCropCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.25 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.75 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSelectionCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSelection1Canvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSelection2Canvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSelection3Canvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.21428571428571427 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawPencilCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT), (0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.25 * HEIGHT), (0.9285714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.9285714285714286 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT), (0.7857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT), (0.75 * WIDTH), (0.07142857142857142 * HEIGHT), (0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.03571428571428571 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawBrushCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.07142857142857142 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.9642857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8928571428571429 * HEIGHT), (0.07142857142857142 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT), WIDTH, (0.07142857142857142 * HEIGHT), (0.9642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), 0.0, (0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawBigBrushCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.03571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.9642857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.39285714285714285 * HEIGHT), (0.25 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT), (0.03571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.03571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.9642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT), (0.8571428571428571 * WIDTH), 0.0, (0.75 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5357142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.5 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.35714285714285715 * HEIGHT), (0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.2857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.5 * HEIGHT), (0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), WIDTH, (0.2857142857142857 * HEIGHT), (0.9642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.07142857142857142 * HEIGHT), (0.9285714285714286 * WIDTH), (0.07142857142857142 * HEIGHT), (0.9285714285714286 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.07142857142857142 * HEIGHT), (0.8928571428571429 * WIDTH), (0.07142857142857142 * HEIGHT), (0.8928571428571429 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawPenCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.9285714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.9285714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.6071428571428571 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.07142857142857142 * HEIGHT), (0.39285714285714285 * WIDTH), (0.10714285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5357142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.7857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.75 * WIDTH), (0.5357142857142857 * HEIGHT), (0.75 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawPen1Canvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.10714285714285714 * WIDTH), HEIGHT);
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), HEIGHT, (0.17857142857142858 * WIDTH), (0.9642857142857143 * HEIGHT), (0.17857142857142858 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.9642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.9642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.9285714285714286 * HEIGHT), (0.39285714285714285 * WIDTH), (0.9285714285714286 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.75 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.9642857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.9642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.5 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.21428571428571427 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.9285714285714286 * HEIGHT), (0.17857142857142858 * WIDTH), (0.9285714285714286 * HEIGHT), (0.17857142857142858 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.8928571428571429 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.8571428571428571 * HEIGHT), (0.03571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.03571428571428571 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.9642857142857143 * HEIGHT), (0.07142857142857142 * WIDTH), HEIGHT, (0.10714285714285714 * WIDTH), HEIGHT);
    CTX.closePath();
    CTX.moveTo((0.5714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.25 * HEIGHT), (0.6071428571428571 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.03571428571428571 * HEIGHT), (0.39285714285714285 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.03571428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.03571428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.03571428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.07142857142857142 * HEIGHT), (0.32142857142857145 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.07142857142857142 * HEIGHT), (0.32142857142857145 * WIDTH), (0.10714285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.25 * HEIGHT), (0.5714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.42857142857142855 * HEIGHT), (0.21428571428571427 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.35714285714285715 * HEIGHT), (0.2857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT), (0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT), (0.32142857142857145 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.5357142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5357142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.25 * HEIGHT), (0.5357142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.14285714285714285 * HEIGHT), (0.32142857142857145 * WIDTH), (0.14285714285714285 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.2857142857142857 * HEIGHT), (0.07142857142857142 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6428571428571429 * HEIGHT), (0.03571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.03571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.75 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8214285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.5 * HEIGHT), (0.25 * WIDTH), (0.5 * HEIGHT), (0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawLineCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawEyeDropperCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.35714285714285715 * HEIGHT), (0.5 * WIDTH), (0.35714285714285715 * HEIGHT), (0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5357142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.39285714285714285 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6428571428571429 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6428571428571429 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.21428571428571427 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8928571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.9285714285714286 * HEIGHT), (0.21428571428571427 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.9285714285714286 * HEIGHT), (0.25 * WIDTH), (0.8928571428571429 * HEIGHT), (0.25 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.07142857142857142 * HEIGHT), (0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT), (0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5357142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.75 * WIDTH), (0.39285714285714285 * HEIGHT), (0.75 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.75 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.2857142857142857 * HEIGHT), (0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8571428571428571 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8571428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.10714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.07142857142857142 * HEIGHT), (0.7857142857142857 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawEraserCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.9285714285714286 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6428571428571429 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5357142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5357142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5357142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.7857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.75 * HEIGHT), (0.9285714285714286 * WIDTH), (0.75 * HEIGHT), (0.9285714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.8214285714285714 * HEIGHT), (0.9285714285714286 * WIDTH), (0.8214285714285714 * HEIGHT), (0.9285714285714286 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.75 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.7857142857142857 * HEIGHT), (0.75 * WIDTH), (0.7857142857142857 * HEIGHT), (0.75 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.03571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.03571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.03571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.03571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT), (0.25 * WIDTH), (0.8928571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8928571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8928571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8928571428571429 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.25 * WIDTH), (0.8214285714285714 * HEIGHT), (0.25 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8214285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.6428571428571429 * HEIGHT), (0.07142857142857142 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawScissorsCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.42857142857142855 * WIDTH), (0.21428571428571427 * HEIGHT), (0.4642857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5714285714285714 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT), (0.4642857142857143 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.75 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5 * HEIGHT), (0.75 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.5 * HEIGHT), (0.9285714285714286 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.75 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.9285714285714286 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5357142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT), (0.5714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.5 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.9285714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.9642857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5 * WIDTH), (0.5 * HEIGHT), (0.5 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.5 * HEIGHT), (0.03571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.03571428571428571 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.5 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5357142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5357142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.32142857142857145 * HEIGHT), (0.4642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.21428571428571427 * HEIGHT), (0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT), (0.42857142857142855 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.03571428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6785714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7142857142857143 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.9285714285714286 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.9642857142857143 * WIDTH), (0.5 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSmudgeCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT), (0.6428571428571429 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.21428571428571427 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.7857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7857142857142857 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.5 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.07142857142857142 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawContrastCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.07142857142857142 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.9285714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.75 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.07142857142857142 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawLayersCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.75 * HEIGHT), (0.2857142857142857 * WIDTH), (0.75 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT), (0.75 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.6785714285714286 * HEIGHT), (0.75 * WIDTH), (0.32142857142857145 * HEIGHT), (0.75 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.2857142857142857 * HEIGHT), (0.75 * WIDTH), (0.25 * HEIGHT), (0.7142857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT), (0.7142857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.6428571428571429 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.25 * HEIGHT), (0.6785714285714286 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8214285714285714 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.7857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawBooleanCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7142857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7142857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.5 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.7857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.5 * WIDTH), (0.7857142857142857 * HEIGHT), (0.5 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.7857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.75 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.5 * HEIGHT), (0.42857142857142855 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.4642857142857143 * HEIGHT), (0.4642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.5 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.39285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.75 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6071428571428571 * HEIGHT), (0.25 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6071428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.42857142857142855 * HEIGHT), (0.35714285714285715 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.42857142857142855 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6071428571428571 * WIDTH), (0.25 * HEIGHT), (0.6071428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawTextCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.25 * HEIGHT), (0.7857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.7857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6785714285714286 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.14285714285714285 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.6071428571428571 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.9285714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8928571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.14285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.21428571428571427 * HEIGHT), (0.21428571428571427 * WIDTH), (0.25 * HEIGHT), (0.21428571428571427 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawAlignLeftCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.7857142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6071428571428571 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.10714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.10714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.10714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.25 * HEIGHT), (0.10714285714285714 * WIDTH), (0.25 * HEIGHT), (0.14285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.25 * HEIGHT), (0.7142857142857143 * WIDTH), (0.25 * HEIGHT), (0.7142857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCenterCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT), (0.8214285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.75 * HEIGHT), (0.17857142857142858 * WIDTH), (0.75 * HEIGHT), (0.17857142857142858 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6071428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6071428571428571 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.75 * WIDTH), (0.6785714285714286 * HEIGHT), (0.75 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.75 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.6071428571428571 * HEIGHT), (0.25 * WIDTH), (0.6071428571428571 * HEIGHT), (0.25 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8214285714285714 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT), (0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.21428571428571427 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.25 * HEIGHT), (0.7857142857142857 * WIDTH), (0.25 * HEIGHT), (0.7857142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT), (0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawAlignRightCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT), (0.21428571428571427 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.75 * HEIGHT), (0.17857142857142858 * WIDTH), (0.75 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT), (0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8928571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.17857142857142858 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.25 * HEIGHT), (0.25 * WIDTH), (0.25 * HEIGHT), (0.2857142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.25 * HEIGHT), (0.8928571428571429 * WIDTH), (0.25 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8571428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawJustifiedCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.8571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6071428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT), (0.14285714285714285 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8571428571428571 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.10714285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.10714285714285714 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8571428571428571 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8928571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.10714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.10714285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.25 * HEIGHT), (0.10714285714285714 * WIDTH), (0.25 * HEIGHT), (0.14285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.25 * HEIGHT), (0.8928571428571429 * WIDTH), (0.25 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8928571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8571428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawBulbCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.03571428571428571 * HEIGHT), (0.14285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT), (0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.5 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6071428571428571 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT), (0.35714285714285715 * WIDTH), (0.9285714285714286 * HEIGHT), (0.39285714285714285 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.9642857142857143 * HEIGHT), (0.42857142857142855 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5357142857142857 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.6071428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5 * HEIGHT), (0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6785714285714286 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.10714285714285714 * HEIGHT), (0.75 * WIDTH), (0.21428571428571427 * HEIGHT), (0.75 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5357142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.7142857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.21428571428571427 * HEIGHT), (0.32142857142857145 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawBulbOnCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.14285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7857142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.03571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.14285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.9642857142857143 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.9642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.21428571428571427 * HEIGHT), (0.21428571428571427 * WIDTH), (0.32142857142857145 * HEIGHT), (0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT), (0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.9285714285714286 * HEIGHT), (0.39285714285714285 * WIDTH), (0.9285714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.9642857142857143 * HEIGHT), (0.4642857142857143 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.9642857142857143 * HEIGHT), (0.5714285714285714 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6785714285714286 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.35714285714285715 * HEIGHT), (0.75 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.5714285714285714 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6785714285714286 * HEIGHT), (0.5714285714285714 * WIDTH), (0.75 * HEIGHT), (0.5714285714285714 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.75 * HEIGHT), (0.5357142857142857 * WIDTH), (0.75 * HEIGHT), (0.5 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.75 * HEIGHT), (0.42857142857142855 * WIDTH), (0.75 * HEIGHT), (0.42857142857142855 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT), (0.39285714285714285 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.25 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.35714285714285715 * HEIGHT), (0.35714285714285715 * WIDTH), (0.25 * HEIGHT), (0.5 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawGaugeCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8214285714285714 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.75 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.6428571428571429 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5357142857142857 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5357142857142857 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.7857142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.7857142857142857 * HEIGHT), (0.5357142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.7857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7857142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6428571428571429 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.25 * WIDTH), (0.6428571428571429 * HEIGHT), (0.21428571428571427 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6071428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT), (0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.07142857142857142 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.9285714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.75 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.25 * HEIGHT), (0.75 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.35714285714285715 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT), (0.6785714285714286 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT), (0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.39285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.21428571428571427 * HEIGHT), (0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT), (0.5 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.6785714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.5 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.5 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5 * HEIGHT), (0.7857142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.5 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT), (0.6785714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5 * HEIGHT), (0.21428571428571427 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.32142857142857145 * WIDTH), (0.4642857142857143 * HEIGHT), (0.2857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.42857142857142855 * HEIGHT), (0.42857142857142855 * WIDTH), (0.5357142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawUnlockCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.5714285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.5357142857142857 * HEIGHT), (0.39285714285714285 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.5357142857142857 * HEIGHT), (0.4642857142857143 * WIDTH), (0.5714285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.6785714285714286 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6785714285714286 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.lineTo((0.9642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.9642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.9642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.8571428571428571 * WIDTH), (0.07142857142857142 * HEIGHT), (0.7142857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.07142857142857142 * HEIGHT), (0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.39285714285714285 * HEIGHT), (0.03571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT), (0.03571428571428571 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.5 * HEIGHT), (0.03571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.03571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.8928571428571429 * HEIGHT), (0.07142857142857142 * WIDTH), (0.9285714285714286 * HEIGHT), (0.14285714285714285 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.9285714285714286 * HEIGHT), (0.75 * WIDTH), (0.8928571428571429 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.5 * HEIGHT), (0.75 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.42857142857142855 * HEIGHT), (0.7142857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5357142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5357142857142857 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.5357142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.5357142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.14285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.8928571428571429 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawTagsCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.lineTo((0.10714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.lineTo((0.8571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.21428571428571427 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.39285714285714285 * HEIGHT), (0.14285714285714285 * WIDTH), (0.35714285714285715 * HEIGHT), (0.14285714285714285 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.21428571428571427 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.25 * HEIGHT), (0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.25 * WIDTH), (0.39285714285714285 * HEIGHT), (0.21428571428571427 * WIDTH), (0.39285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawMonitorCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.9285714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.75 * HEIGHT), (0.6071428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.75 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT), (0.6428571428571429 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.8928571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT), (0.39285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.75 * HEIGHT), (0.10714285714285714 * WIDTH), (0.75 * HEIGHT), (0.07142857142857142 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.75 * HEIGHT), 0.0, (0.7142857142857143 * HEIGHT), 0.0, (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo(0.0, (0.6785714285714286 * HEIGHT), 0.0, (0.2857142857142857 * HEIGHT), 0.0, (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo(0.0, (0.07142857142857142 * HEIGHT), (0.03571428571428571 * WIDTH), (0.03571428571428571 * HEIGHT), (0.07142857142857142 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.03571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.03571428571428571 * HEIGHT), (0.9285714285714286 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT), WIDTH, (0.07142857142857142 * HEIGHT), WIDTH, (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo(WIDTH, (0.10714285714285714 * HEIGHT), WIDTH, (0.5 * HEIGHT), WIDTH, (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo(WIDTH, (0.7142857142857143 * HEIGHT), (0.9642857142857143 * WIDTH), (0.75 * HEIGHT), (0.9285714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.9285714285714286 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawPlaneCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.42857142857142855 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.5714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.9642857142857143 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.9642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.5714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.6785714285714286 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.5 * WIDTH), (0.8928571428571429 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.32142857142857145 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.6071428571428571 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.35714285714285715 * HEIGHT), (0.42857142857142855 * WIDTH), (0.07142857142857142 * HEIGHT), (0.42857142857142855 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawTrainCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.5 * WIDTH), (0.03571428571428571 * HEIGHT), (0.4642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT), (0.4642857142857143 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.03571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.03571428571428571 * HEIGHT), (0.42857142857142855 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.10714285714285714 * HEIGHT), (0.42857142857142855 * WIDTH), (0.10714285714285714 * HEIGHT), (0.4642857142857143 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.4642857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6071428571428571 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5714285714285714 * WIDTH), (0.03571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5357142857142857 * WIDTH), (0.03571428571428571 * HEIGHT), (0.5357142857142857 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.5357142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5357142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT), (0.2857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.2857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.14285714285714285 * HEIGHT), (0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT), (0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.2857142857142857 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT), (0.17857142857142858 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.7857142857142857 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.9642857142857143 * HEIGHT), (0.17857142857142858 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.lineTo((0.39285714285714285 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.9642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.9642857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT), (0.75 * WIDTH), (0.14285714285714285 * HEIGHT), (0.7142857142857143 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.32142857142857145 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.75 * HEIGHT), (0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.2857142857142857 * WIDTH), (0.6428571428571429 * HEIGHT), (0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.6428571428571429 * HEIGHT), (0.35714285714285715 * WIDTH), (0.6785714285714286 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.35714285714285715 * WIDTH), (0.75 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6785714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.75 * HEIGHT), (0.6428571428571429 * WIDTH), (0.75 * HEIGHT), (0.6428571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6428571428571429 * WIDTH), (0.6428571428571429 * HEIGHT), (0.6785714285714286 * WIDTH), (0.6428571428571429 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.6428571428571429 * HEIGHT), (0.75 * WIDTH), (0.6785714285714286 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.75 * HEIGHT), (0.7142857142857143 * WIDTH), (0.75 * HEIGHT), (0.6785714285714286 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.5 * HEIGHT), (0.75 * WIDTH), (0.5357142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.5357142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5357142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.5357142857142857 * HEIGHT), (0.25 * WIDTH), (0.5 * HEIGHT), (0.25 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.4642857142857143 * HEIGHT), (0.25 * WIDTH), (0.35714285714285715 * HEIGHT), (0.25 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.32142857142857145 * HEIGHT), (0.2857142857142857 * WIDTH), (0.2857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7142857142857143 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.2857142857142857 * HEIGHT), (0.7857142857142857 * WIDTH), (0.32142857142857145 * HEIGHT), (0.7857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT), (0.7857142857142857 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawCarCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.75 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.17857142857142858 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.2857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT), (0.25 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.17857142857142858 * HEIGHT), (0.17857142857142858 * WIDTH), (0.35714285714285715 * HEIGHT), (0.17857142857142858 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.4642857142857143 * HEIGHT), (0.8571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8214285714285714 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.42857142857142855 * HEIGHT), (0.75 * WIDTH), (0.4642857142857143 * HEIGHT), (0.75 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.5357142857142857 * HEIGHT), (0.75 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.8571428571428571 * WIDTH), (0.5714285714285714 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5357142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.5 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT), (0.8928571428571429 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.5714285714285714 * HEIGHT), (0.25 * WIDTH), (0.5357142857142857 * HEIGHT), (0.25 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.4642857142857143 * HEIGHT), (0.21428571428571427 * WIDTH), (0.42857142857142855 * HEIGHT), (0.17857142857142858 * WIDTH), (0.42857142857142855 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.42857142857142855 * HEIGHT), (0.10714285714285714 * WIDTH), (0.4642857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.5357142857142857 * HEIGHT), (0.14285714285714285 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.7142857142857143 * HEIGHT), (0.25 * WIDTH), (0.7857142857142857 * HEIGHT), (0.25 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8214285714285714 * HEIGHT), (0.21428571428571427 * WIDTH), (0.8571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.14285714285714285 * WIDTH), (0.8571428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8214285714285714 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.7857142857142857 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT), (0.10714285714285714 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.03571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.03571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT), (0.03571428571428571 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.42857142857142855 * HEIGHT), (0.07142857142857142 * WIDTH), (0.35714285714285715 * HEIGHT), (0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.35714285714285715 * HEIGHT), (0.21428571428571427 * WIDTH), (0.14285714285714285 * HEIGHT), (0.21428571428571427 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.14285714285714285 * HEIGHT), (0.25 * WIDTH), (0.10714285714285714 * HEIGHT), (0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.10714285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT), (0.7142857142857143 * WIDTH), (0.10714285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.10714285714285714 * HEIGHT), (0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.14285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8928571428571429 * WIDTH), (0.35714285714285715 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.35714285714285715 * HEIGHT), (0.9642857142857143 * WIDTH), (0.42857142857142855 * HEIGHT), (0.9642857142857143 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.4642857142857143 * HEIGHT), (0.9642857142857143 * WIDTH), (0.4642857142857143 * HEIGHT), (0.9642857142857143 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.9642857142857143 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.7142857142857143 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT), (0.8928571428571429 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.8214285714285714 * HEIGHT), (0.8571428571428571 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.8571428571428571 * HEIGHT), (0.75 * WIDTH), (0.8214285714285714 * HEIGHT), (0.75 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.7857142857142857 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT), (0.75 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawLuggageCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.6071428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.42857142857142855 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.6071428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.6428571428571429 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.25 * HEIGHT), (0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6428571428571429 * WIDTH), (0.14285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.14285714285714285 * HEIGHT), (0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT), (0.42857142857142855 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.14285714285714285 * HEIGHT), (0.39285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.17857142857142858 * HEIGHT), (0.39285714285714285 * WIDTH), (0.25 * HEIGHT), (0.39285714285714285 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.6428571428571429 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT), (0.8928571428571429 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.8571428571428571 * HEIGHT), (0.9642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT), (0.9642857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.75 * HEIGHT), (0.9642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT), (0.9642857142857143 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.9642857142857143 * WIDTH), (0.2857142857142857 * HEIGHT), (0.9285714285714286 * WIDTH), (0.25 * HEIGHT), (0.8928571428571429 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.8928571428571429 * WIDTH), (0.25 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.25 * HEIGHT), (0.10714285714285714 * WIDTH), (0.25 * HEIGHT), (0.10714285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.03571428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.03571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.32142857142857145 * HEIGHT), (0.03571428571428571 * WIDTH), (0.75 * HEIGHT), (0.03571428571428571 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.03571428571428571 * WIDTH), (0.8214285714285714 * HEIGHT), (0.07142857142857142 * WIDTH), (0.8571428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.10714285714285714 * WIDTH), (0.8571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT), (0.17857142857142858 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawBrightnessCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.7857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.lineTo((0.2857142857142857 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.21428571428571427 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.21428571428571427 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.7857142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.7857142857142857 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.lineTo((0.7142857142857143 * WIDTH), (0.75 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.07142857142857142 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.17857142857142858 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.07142857142857142 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.lineTo((0.9285714285714286 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.4642857142857143 * HEIGHT));
    CTX.lineTo((0.8214285714285714 * WIDTH), (0.5357142857142857 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.lineTo((0.4642857142857143 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.lineTo((0.5357142857142857 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.7142857142857143 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.7142857142857143 * WIDTH), (0.39285714285714285 * HEIGHT), (0.6071428571428571 * WIDTH), (0.2857142857142857 * HEIGHT), (0.5 * WIDTH), (0.2857142857142857 * HEIGHT));
    CTX.bezierCurveTo((0.39285714285714285 * WIDTH), (0.2857142857142857 * HEIGHT), (0.2857142857142857 * WIDTH), (0.39285714285714285 * HEIGHT), (0.2857142857142857 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.2857142857142857 * WIDTH), (0.6071428571428571 * HEIGHT), (0.39285714285714285 * WIDTH), (0.7142857142857143 * HEIGHT), (0.5 * WIDTH), (0.7142857142857143 * HEIGHT));
    CTX.bezierCurveTo((0.6071428571428571 * WIDTH), (0.7142857142857143 * HEIGHT), (0.7142857142857143 * WIDTH), (0.6071428571428571 * HEIGHT), (0.7142857142857143 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawDeleteCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT), (0.8571428571428571 * WIDTH), (0.25 * HEIGHT));
    CTX.lineTo((0.75 * WIDTH), (0.14285714285714285 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.14285714285714285 * HEIGHT), (0.75 * WIDTH), (0.17857142857142858 * HEIGHT), (0.75 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.10714285714285714 * HEIGHT), (0.6071428571428571 * WIDTH), (0.07142857142857142 * HEIGHT), (0.5 * WIDTH), (0.07142857142857142 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.07142857142857142 * HEIGHT), (0.07142857142857142 * WIDTH), (0.25 * HEIGHT), (0.07142857142857142 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.07142857142857142 * WIDTH), (0.6071428571428571 * HEIGHT), (0.10714285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.17857142857142858 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT), (0.14285714285714285 * WIDTH), (0.75 * HEIGHT));
    CTX.lineTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT));
    CTX.bezierCurveTo((0.25 * WIDTH), (0.8571428571428571 * HEIGHT), (0.25 * WIDTH), (0.8214285714285714 * HEIGHT), (0.25 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.8928571428571429 * HEIGHT), (0.39285714285714285 * WIDTH), (0.9285714285714286 * HEIGHT), (0.5 * WIDTH), (0.9285714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.75 * WIDTH), (0.9285714285714286 * HEIGHT), (0.9285714285714286 * WIDTH), (0.75 * HEIGHT), (0.9285714285714286 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.9285714285714286 * WIDTH), (0.39285714285714285 * HEIGHT), (0.8928571428571429 * WIDTH), (0.32142857142857145 * HEIGHT), (0.8214285714285714 * WIDTH), (0.25 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.17857142857142858 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.17857142857142858 * WIDTH), (0.32142857142857145 * HEIGHT), (0.32142857142857145 * WIDTH), (0.17857142857142858 * HEIGHT), (0.5 * WIDTH), (0.17857142857142858 * HEIGHT));
    CTX.bezierCurveTo((0.5714285714285714 * WIDTH), (0.17857142857142858 * HEIGHT), (0.6428571428571429 * WIDTH), (0.21428571428571427 * HEIGHT), (0.6785714285714286 * WIDTH), (0.25 * HEIGHT));
    CTX.bezierCurveTo((0.6785714285714286 * WIDTH), (0.25 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT), (0.25 * WIDTH), (0.6785714285714286 * HEIGHT));
    CTX.bezierCurveTo((0.21428571428571427 * WIDTH), (0.6428571428571429 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5714285714285714 * HEIGHT), (0.17857142857142858 * WIDTH), (0.5 * HEIGHT));
    CTX.closePath();
    CTX.moveTo((0.5 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.bezierCurveTo((0.42857142857142855 * WIDTH), (0.8214285714285714 * HEIGHT), (0.35714285714285715 * WIDTH), (0.7857142857142857 * HEIGHT), (0.32142857142857145 * WIDTH), (0.75 * HEIGHT));
    CTX.bezierCurveTo((0.32142857142857145 * WIDTH), (0.75 * HEIGHT), (0.75 * WIDTH), (0.32142857142857145 * HEIGHT), (0.75 * WIDTH), (0.32142857142857145 * HEIGHT));
    CTX.bezierCurveTo((0.7857142857142857 * WIDTH), (0.35714285714285715 * HEIGHT), (0.8214285714285714 * WIDTH), (0.42857142857142855 * HEIGHT), (0.8214285714285714 * WIDTH), (0.5 * HEIGHT));
    CTX.bezierCurveTo((0.8214285714285714 * WIDTH), (0.6785714285714286 * HEIGHT), (0.6785714285714286 * WIDTH), (0.8214285714285714 * HEIGHT), (0.5 * WIDTH), (0.8214285714285714 * HEIGHT));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawSaveCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    double w = (WIDTH / 100);
    double h = (HEIGHT / 100);
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((20.185 * w), (54.728 * h));
    CTX.lineTo((20.185 * w), (74.938 * h));
    CTX.bezierCurveTo((21.904 * w), (75.513 * h), (23.749 * w), (75.521 * h), (25.537 * w), (75.585 * h));
    CTX.lineTo((74.463 * w), (75.585 * h));
    CTX.bezierCurveTo((76.256 * w), (75.555 * h), (78.086 * w), (75.462 * h), (79.815 * w), (74.938 * h));
    CTX.lineTo((79.815 * w), (54.728 * h));
    CTX.lineTo((93.575 * w), (54.728 * h));
    CTX.lineTo((93.575 * w), (77.843 * h));
    CTX.bezierCurveTo((93.575 * w), (82.781 * h), (90.216 * w), (85.782 * h), (85.545 * w), (87.548 * h));
    CTX.bezierCurveTo((82.435 * w), (88.723 * h), (78.538 * w), (89.346 * h), (74.463 * w), (89.346 * h));
    CTX.lineTo((25.536 * w), (89.346 * h));
    CTX.bezierCurveTo((21.462 * w), (89.346 * h), (17.565 * w), (88.723 * h), (14.455 * w), (87.548 * h));
    CTX.bezierCurveTo((9.784 * w), (85.782 * h), (6.425 * w), (82.781 * h), (6.425 * w), (77.843 * h));
    CTX.lineTo((6.425 * w), (54.728 * h));
    CTX.lineTo((20.185 * w), (54.728 * h));
    CTX.closePath();
    CTX.fill();
    CTX.moveTo((56.761 * w), (11.132 * h));
    CTX.lineTo((56.828 * w), (35.655 * h));
    CTX.lineTo((74.453 * w), (35.655 * h));
    CTX.lineTo((68.182 * w), (43.178 * h));
    CTX.lineTo((53.523 * w), (60.765 * h));
    CTX.lineTo((50 * w), (64.992 * h));
    CTX.lineTo((46.477 * w), (60.765 * h));
    CTX.lineTo((31.818 * w), (43.178 * h));
    CTX.lineTo((25.547 * w), (35.655 * h));
    CTX.lineTo((43.067 * w), (35.655 * h));
    CTX.lineTo((43.001 * w), (11.17 * h));
    CTX.lineTo((56.761 * w), (11.132 * h));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
  
  public static final void drawLoadCanvas(final GraphicsContext CTX, final double WIDTH, final double HEIGHT) {
    double w = (WIDTH / 100);
    double h = (HEIGHT / 100);
    CTX.save();
    CTX.beginPath();
    CTX.moveTo((20.185 * w), (54.728 * h));
    CTX.lineTo((20.185 * w), (74.938 * h));
    CTX.bezierCurveTo((21.904 * w), (75.513 * h), (23.749 * w), (75.521 * h), (25.537 * w), (75.585 * h));
    CTX.lineTo((74.463 * w), (75.585 * h));
    CTX.bezierCurveTo((76.256 * w), (75.555 * h), (78.086 * w), (75.462 * h), (79.815 * w), (74.938 * h));
    CTX.lineTo((79.815 * w), (54.728 * h));
    CTX.lineTo((93.575 * w), (54.728 * h));
    CTX.lineTo((93.575 * w), (77.843 * h));
    CTX.bezierCurveTo((93.575 * w), (82.781 * h), (90.216 * w), (85.782 * h), (85.545 * w), (87.548 * h));
    CTX.bezierCurveTo((82.435 * w), (88.723 * h), (78.538 * w), (89.346 * h), (74.463 * w), (89.346 * h));
    CTX.lineTo((25.536 * w), (89.346 * h));
    CTX.bezierCurveTo((21.462 * w), (89.346 * h), (17.565 * w), (88.723 * h), (14.455 * w), (87.548 * h));
    CTX.bezierCurveTo((9.784 * w), (85.782 * h), (6.425 * w), (82.781 * h), (6.425 * w), (77.843 * h));
    CTX.lineTo((6.425 * w), (54.728 * h));
    CTX.lineTo((20.185 * w), (54.728 * h));
    CTX.closePath();
    CTX.fill();
    CTX.moveTo((56.761 * w), (64.992 * h));
    CTX.lineTo((56.828 * w), (40.469 * h));
    CTX.lineTo((74.453 * w), (40.469 * h));
    CTX.lineTo((68.182 * w), (32.946 * h));
    CTX.lineTo((53.523 * w), (15.359 * h));
    CTX.lineTo((50 * w), (11.132 * h));
    CTX.lineTo((46.477 * w), (15.359 * h));
    CTX.lineTo((31.818 * w), (32.946 * h));
    CTX.lineTo((25.547 * w), (40.469 * h));
    CTX.lineTo((43.067 * w), (40.469 * h));
    CTX.lineTo((43.001 * w), (64.954 * h));
    CTX.lineTo((56.761 * w), (64.992 * h));
    CTX.closePath();
    CTX.fill();
    CTX.restore();
  }
}
