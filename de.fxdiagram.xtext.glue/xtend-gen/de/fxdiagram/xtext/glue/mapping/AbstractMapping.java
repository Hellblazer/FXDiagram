package de.fxdiagram.xtext.glue.mapping;

import de.fxdiagram.annotations.properties.ModelNode;
import de.fxdiagram.core.model.ModelElementImpl;
import de.fxdiagram.core.model.XModelProvider;

@ModelNode
@SuppressWarnings("all")
public abstract class AbstractMapping<T extends Object> implements XModelProvider {
  private Class<T> _typeGuard;
  
  public Class<T> getTypeGuard() {
    return this._typeGuard;
  }
  
  public void setTypeGuard(final Class<T> typeGuard) {
    this._typeGuard = typeGuard;
  }
  
  public AbstractMapping(final Class<T> typeGuard) {
    this.setTypeGuard(typeGuard);
  }
  
  public boolean isApplicable(final Object domainObject) {
    Class<T> _typeGuard = this.getTypeGuard();
    return _typeGuard.isInstance(domainObject);
  }
  
  /**
   * Automatically generated by @ModelNode. Needed for deserialization.
   */
  public AbstractMapping() {
  }
  
  public void populate(final ModelElementImpl modelElement) {
    
  }
}
