diff --git a/plugins/de.cau.cs.kieler.kiml.graphviz.dot/.project b/plugins/de.cau.cs.kieler.kiml.graphviz.dot/.project
index c3379c3..b502453 100644
--- a/plugins/de.cau.cs.kieler.kiml.graphviz.dot/.project
+++ b/plugins/de.cau.cs.kieler.kiml.graphviz.dot/.project
@@ -6,6 +6,11 @@
 	</projects>
 	<buildSpec>
 		<buildCommand>
+			<name>org.eclipse.xtext.ui.shared.xtextBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
 			<name>org.eclipse.jdt.core.javabuilder</name>
 			<arguments>
 			</arguments>
@@ -34,7 +39,7 @@
 	<natures>
 		<nature>org.eclipse.jdt.core.javanature</nature>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.xtext.ui.shared.xtextNature</nature>
 		<nature>net.sf.eclipsecs.core.CheckstyleNature</nature>
+		<nature>org.eclipse.xtext.ui.shared.xtextNature</nature>
 	</natures>
 </projectDescription>
diff --git a/plugins/de.cau.cs.kieler.kiml.graphviz.layouter/src/de/cau/cs/kieler/kiml/graphviz/layouter/GraphvizLayoutProvider.java b/plugins/de.cau.cs.kieler.kiml.graphviz.layouter/src/de/cau/cs/kieler/kiml/graphviz/layouter/GraphvizLayoutProvider.java
index cfc8040..cd8dd5f 100644
--- a/plugins/de.cau.cs.kieler.kiml.graphviz.layouter/src/de/cau/cs/kieler/kiml/graphviz/layouter/GraphvizLayoutProvider.java
+++ b/plugins/de.cau.cs.kieler.kiml.graphviz.layouter/src/de/cau/cs/kieler/kiml/graphviz/layouter/GraphvizLayoutProvider.java
@@ -24,16 +24,16 @@
 import org.eclipse.xtext.resource.XtextResource;
 import org.eclipse.xtext.resource.XtextResourceSet;
 
+import com.google.inject.Injector;
+
 import de.cau.cs.kieler.core.WrappedException;
 import de.cau.cs.kieler.core.alg.IKielerProgressMonitor;
 import de.cau.cs.kieler.core.kgraph.KNode;
 import de.cau.cs.kieler.core.util.ForkedOutputStream;
 import de.cau.cs.kieler.core.util.ForwardingInputStream;
 import de.cau.cs.kieler.kiml.AbstractLayoutProvider;
-import de.cau.cs.kieler.kiml.formats.GraphFormatData;
-import de.cau.cs.kieler.kiml.formats.IGraphFormatHandler;
 import de.cau.cs.kieler.kiml.formats.TransformationData;
-import de.cau.cs.kieler.kiml.formats.GraphFormatsService;
+import de.cau.cs.kieler.kiml.graphviz.dot.GraphvizDotStandaloneSetup;
 import de.cau.cs.kieler.kiml.graphviz.dot.dot.GraphvizModel;
 import de.cau.cs.kieler.kiml.graphviz.dot.transform.Command;
 import de.cau.cs.kieler.kiml.graphviz.dot.transform.DotExporter;
@@ -65,6 +65,14 @@
     /** the call number for the current execution. */
     private int myCallNo;
 
+    Injector injector;
+    
+    private Injector getInjector() {
+    	 if(injector == null) 
+    		 injector = new GraphvizDotStandaloneSetup().createInjectorAndDoEMFRegistration();
+    	 return injector;
+    }
+    
     /**
      * {@inheritDoc}
      */
@@ -73,17 +81,19 @@
         command = Command.valueOf(parameter);
         graphvizTool = new GraphvizTool(command);
         // the dot format handler is indirectly fetched in order to ensure proper injection
-        IGraphFormatHandler<?> handler = null;
-        GraphFormatData formatData = GraphFormatsService.getInstance().getFormatData(
-                DotFormatHandler.ID);
-        if (formatData != null) {
-            handler = formatData.getHandler();
-        }
-        if (handler instanceof DotFormatHandler) {
-            dotHandler = (DotFormatHandler) handler;
-        } else {
-            throw new IllegalStateException("The Graphviz Dot language support is not available.");
-        }
+        
+        dotHandler = getInjector().getInstance(DotFormatHandler.class);
+//        IGraphFormatHandler<?> handler = null;
+//        GraphFormatData formatData = GraphFormatsService.getInstance().getFormatData(
+//                DotFormatHandler.ID);
+//        if (formatData != null) {
+//            handler = formatData.getHandler();
+//        }
+//        if (handler instanceof DotFormatHandler) {
+//            dotHandler = (DotFormatHandler) handler;
+//        } else {
+//            throw new IllegalStateException("The Graphviz Dot language support is not available.");
+//        }
     }
     
     /**
diff --git a/plugins/de.cau.cs.kieler.kiml.graphviz.layouter/src/de/cau/cs/kieler/kiml/graphviz/layouter/GraphvizTool.java b/plugins/de.cau.cs.kieler.kiml.graphviz.layouter/src/de/cau/cs/kieler/kiml/graphviz/layouter/GraphvizTool.java
index 3f755fc..2d85cdb 100644
--- a/plugins/de.cau.cs.kieler.kiml.graphviz.layouter/src/de/cau/cs/kieler/kiml/graphviz/layouter/GraphvizTool.java
+++ b/plugins/de.cau.cs.kieler.kiml.graphviz.layouter/src/de/cau/cs/kieler/kiml/graphviz/layouter/GraphvizTool.java
@@ -21,18 +21,10 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import org.eclipse.jface.preference.IPreferenceStore;
-import org.eclipse.jface.preference.PreferenceDialog;
-import org.eclipse.swt.widgets.Display;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.dialogs.PreferencesUtil;
-
 import com.google.common.collect.Lists;
 
 import de.cau.cs.kieler.core.WrappedException;
-import de.cau.cs.kieler.core.util.Maybe;
 import de.cau.cs.kieler.kiml.graphviz.dot.transform.Command;
-import de.cau.cs.kieler.kiml.graphviz.layouter.preferences.GraphvizPreferencePage;
 
 /**
  * Handler for accessing Graphviz via a separate process.
@@ -198,12 +190,12 @@
      */
     public static String getDotExecutable(final boolean promptUser) {
         // load the graphviz path from the preferences, if any
-        IPreferenceStore preferenceStore = GraphvizLayouterPlugin.getDefault().getPreferenceStore();
-        String dotExecutable = preferenceStore.getString(PREF_GRAPHVIZ_EXECUTABLE);
-        File dotFile = new File(dotExecutable);
-        if (dotFile.exists() && dotFile.canExecute()) {
-            return dotExecutable;
-        }
+//        IPreferenceStore preferenceStore = GraphvizLayouterPlugin.getDefault().getPreferenceStore();
+        String dotExecutable;// = preferenceStore.getString(PREF_GRAPHVIZ_EXECUTABLE);
+        File dotFile;// = new File(dotExecutable);
+//        if (dotFile.exists() && dotFile.canExecute()) {
+//            return dotExecutable;
+//        }
         
         // look in a selection of default locations where it might be installed
         for (String location : DEFAULT_LOCS) {
@@ -222,40 +214,40 @@
             }
         }
         
-        if (promptUser) {
-            if (handleExecPath()) {
-                // fetch the executable string again after the user has entered a new path
-                dotExecutable = preferenceStore.getString(PREF_GRAPHVIZ_EXECUTABLE);
-                dotFile = new File(dotExecutable);
-                if (dotFile.exists() && dotFile.canExecute()) {
-                    return dotExecutable;
-                }
-            }
-        }
-        
+//        if (promptUser) {
+//            if (handleExecPath()) {
+//                // fetch the executable string again after the user has entered a new path
+//                dotExecutable = preferenceStore.getString(PREF_GRAPHVIZ_EXECUTABLE);
+//                dotFile = new File(dotExecutable);
+//                if (dotFile.exists() && dotFile.canExecute()) {
+//                    return dotExecutable;
+//                }
+//            }
+//        }
+//        
         return null;
     }
 
-    /**
-     * Handle missing path to the dot executable. The Graphviz preference page
-     * is opened so the user can enter the correct path. The method returns
-     * after the preference page has been closed.
-     * 
-     * @return true if the user has selected "Ok" in the shown dialog, false otherwise
-     */
-    private static boolean handleExecPath() {
-        final Display display = PlatformUI.getWorkbench().getDisplay();
-        final Maybe<Integer> dialogResult = Maybe.create();
-        display.syncExec(new Runnable() {
-            public void run() {
-                PreferenceDialog preferenceDialog =
-                        PreferencesUtil.createPreferenceDialogOn(display.getActiveShell(),
-                                GraphvizPreferencePage.ID, new String[] {}, null);
-                dialogResult.set(preferenceDialog.open());
-            }
-        });
-        return dialogResult.get() == PreferenceDialog.OK;
-    }
+//    /**
+//     * Handle missing path to the dot executable. The Graphviz preference page
+//     * is opened so the user can enter the correct path. The method returns
+//     * after the preference page has been closed.
+//     * 
+//     * @return true if the user has selected "Ok" in the shown dialog, false otherwise
+//     */
+//    private static boolean handleExecPath() {
+//        final Display display = PlatformUI.getWorkbench().getDisplay();
+//        final Maybe<Integer> dialogResult = Maybe.create();
+//        display.syncExec(new Runnable() {
+//            public void run() {
+//                PreferenceDialog preferenceDialog =
+//                        PreferencesUtil.createPreferenceDialogOn(display.getActiveShell(),
+//                                GraphvizPreferencePage.ID, new String[] {}, null);
+//                dialogResult.set(preferenceDialog.open());
+//            }
+//        });
+//        return dialogResult.get() == PreferenceDialog.OK;
+//    }
 
     /**
      * Return the stream that is used to give input to Graphviz.
@@ -505,13 +497,13 @@
                     }
                 }
                 
-                // retrieve the current timeout value
-                IPreferenceStore preferenceStore =
-                        GraphvizLayouterPlugin.getDefault().getPreferenceStore();
-                int timeout = preferenceStore.getInt(PREF_TIMEOUT);
-                if (timeout < PROCESS_MIN_TIMEOUT) {
-                    timeout = PROCESS_DEF_TIMEOUT;
-                }
+//                // retrieve the current timeout value
+//                IPreferenceStore preferenceStore =
+//                        GraphvizLayouterPlugin.getDefault().getPreferenceStore();
+//                int timeout = preferenceStore.getInt(PREF_TIMEOUT);
+//                if (timeout < PROCESS_MIN_TIMEOUT) {
+                   int timeout = PROCESS_DEF_TIMEOUT;
+//                }
                 
                 boolean interrupted = false;
                 try {